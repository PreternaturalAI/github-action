name: 'Preternatural CLI Action'
description: 'Run Preternatural CLI commands on repositories with specified Xcode version'
inputs:
  command:
    description: 'The Preternatural command to run (build or update)'
    required: true
  derived_data_path:
    description: 'The path to the derived data folder'
    required: false
  build_all_platforms:
    description: 'Builds for all supported platforms'
    required: false
    default: 'false'
  verify:
    description: 'Verify the update process (for update command)'
    required: false
    default: 'false'
  configuration:
    description: 'Build configuration (debug or release)'
    required: false
    default: 'release'
  xcode-version:
    description: |
      Specify the Xcode version to use. Accepts the following formats:
      - 'latest': Latest version, including beta releases
      - 'latest-stable': Latest stable version
      - SemVer string: e.g., '14', '14.1', '14.3.1', '^14.3.0'
      - '<semver>-beta': e.g., '15.0-beta'
    required: false
    default: 'latest-stable'
  working-directory:
    description: 'The working directory where the command should be executed'
    required: false
runs:
  using: 'composite'
  steps:
    - name: Setup Xcode version
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ inputs.xcode-version }}
    
    - name: Download preternatural CLI
      shell: bash
      run: |
        curl -L https://raw.githubusercontent.com/PreternaturalAI/cli-binary/master/Sources/preternatural -o preternatural
        chmod +x preternatural
        defaults write com.apple.dt.Xcode IDESkipMacroFingerprintValidation -bool YES

    - name: Run preternatural command
      shell: bash
      run: |
        CLI_PATH="./preternatural"
        if [ -n "${{ inputs.working-directory }}" ]; then
            cd "${{ inputs.working-directory }}"
        fi
        COMMAND="$CLI_PATH ${{ inputs.command }}"
        if [ -n "${{ inputs.derived_data_path }}" ]; then
            COMMAND="$COMMAND --derived-data-path '${{ inputs.derived_data_path }}'"
        fi
        if [ "${{ inputs.build_all_platforms }}" == "true" ]; then
            COMMAND="$COMMAND --build-all-platforms"
        fi
        if [ "${{ inputs.verify }}" == "true" ]; then
            COMMAND="$COMMAND --verify"
        fi
        if [ "${{ inputs.configuration }}" == "debug" ]; then
            COMMAND="$COMMAND --debug"
        fi
        echo "Executing command: $COMMAND"
        eval $COMMAND