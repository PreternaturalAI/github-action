name: 'Preternatural Build Action'
description: 'Run Preternatural build command on repositories with a specified Xcode version'
inputs:
  derived_data_path:
    description: 'The path to the derived data folder'
    required: false
  build_all_platforms:
    description: 'Builds for all supported platforms'
    required: false
    default: 'false'
  xcode-version:
    description: 'Xcode version to use'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Install Preternatural
      if: ${{ !env.ACT }} # Skipping when run locally.
      shell: bash
      run: |
        brew tap PreternaturalAI/preternatural
        brew install preternatural

    - name: Cache derived data
      uses: actions/cache@v3
      if: ${{ !env.ACT }} # Skipping when run locally.
      with:
        path: ${{ inputs.derived_data_path || '~/Library/Developer/Xcode/DerivedData' }}
        key: ${{ runner.os }}-derived-data-xcode-${{ inputs.xcode-version }}
        restore-keys: |
          ${{ runner.os }}-derived-data-xcode-${{ inputs.xcode-version }}

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ inputs.xcode-version }}
      
    - name: Execute Preternatural build command
      id: build
      shell: bash
      run: |
        COMMAND="preternatural build"
        if [ -n "${{ inputs.derived_data_path }}" ]; then
          COMMAND="$COMMAND --derived-data-path '${{ inputs.derived_data_path }}'"
        fi
        if [ "${{ inputs.build_all_platforms }}" == "true" ]; then
          COMMAND="$COMMAND --build-all-platforms"
        fi
        echo "Executing command: $COMMAND"
        eval $COMMAND
      continue-on-error: true

    - name: Clear caches and retry build
      if: steps.build.outcome == 'failure'
      shell: bash
      run: |
        echo "Initial build failed. Clearing caches and retrying..."
        
        # Allow individual commands to fail without stopping the script
        set +e
        
        # Clear SwiftPM caches
        if [ "${{ !env.ACT }}" == "true" ]; then
          rm -rf ~/Library/org.swift.swiftpm
          rm -rf ~/Library/Caches/org.swift.swiftpm
        fi
        
        # Force package update
        rm -rf .build
        swift package update
        swift package resolve
        
        # Clear derived data
        if [ -n "${{ inputs.derived_data_path }}" ]; then
          rm -rf "${{ inputs.derived_data_path }}"
        else
          rm -rf ~/Library/Developer/Xcode/DerivedData
        fi
        
        # Retry build
        COMMAND="preternatural build"
        if [ -n "${{ inputs.derived_data_path }}" ]; then
          COMMAND="$COMMAND --derived-data-path '${{ inputs.derived_data_path }}'"
        fi
        if [ "${{ inputs.build_all_platforms }}" == "true" ]; then
          COMMAND="$COMMAND --build-all-platforms"
        fi
        echo "Retrying command: $COMMAND"
        eval $COMMAND
        
        # Capture the exit code of the last command (the build retry)
        BUILD_EXIT_CODE=$?
        
        # Exit with the build's exit code
        exit $BUILD_EXIT_CODE